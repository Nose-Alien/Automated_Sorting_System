<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/K230_urat_dma/K230_urat_dma.c">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/K230_urat_dma/K230_urat_dma.c" />
              <option name="originalContent" value="//&#10;// Created by nose on 2025/10/12.&#10;//&#10;&#10;#include &quot;K230_urat_dma.h&quot;&#10;&#10;extern uint8_t data[];&#10;&#10;void K230_urat_dma_Init()&#10;{&#10;    HAL_UARTEx_ReceiveToIdle_DMA(&amp;huart2, data, sizeof(data));&#10;    __HAL_DMA_DISABLE_IT(&amp;hdma_usart2_rx, DMA_IT_HT);&#10;}&#10;&#10;void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)&#10;{&#10;    if (huart== &amp;huart2) {&#10;        HAL_UART_Transmit_DMA(&amp;huart2, data, Size);&#10;        HAL_UARTEx_ReceiveToIdle_DMA(&amp;huart2, data, sizeof(data));&#10;        __HAL_DMA_DISABLE_IT(&amp;hdma_usart2_rx, DMA_IT_HT);&#10;    }&#10;}" />
              <option name="updatedContent" value="//&#10;// Created by nose on 2025/10/12.&#10;//&#10;&#10;#include &quot;K230_urat_dma.h&quot;&#10;&#10;extern uint8_t data[];&#10;&#10;void K230_urat_dma_Init()&#10;{&#10;    HAL_UARTEx_ReceiveToIdle_DMA(&amp;huart2, data, sizeof(data));&#10;    __HAL_DMA_DISABLE_IT(&amp;hdma_usart2_rx, DMA_IT_HT);&#10;}&#10;&#10;void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)&#10;{&#10;    if (huart== &amp;huart2) {&#10;        HAL_UART_Transmit_DMA(&amp;huart2, data, Size);&#10;        HAL_UARTEx_ReceiveToIdle_DMA(&amp;huart2, data, sizeof(data));&#10;        __HAL_DMA_DISABLE_IT(&amp;hdma_usart2_rx, DMA_IT_HT);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/user_main/user_main.c">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/user_main/user_main.c" />
              <option name="originalContent" value="/**&#10;  * @file user_main.c&#10;  * @brief 用户主程序的入口文件&#10;  * @author sleet&#10;  * @date 2025/9/30&#10;  */&#10;&#10;#include &quot;user_main.h&quot;&#10;#include &quot;conveyor_device.h&quot;&#10;#include &quot;../K230_urat_dma/K230_urat_dma.h&quot;&#10;&#10;&#10;static uint32_t TIM4_tick_ms = 0; // 静态变量，跟踪时间滴答&#10;P_BotArm arm0;&#10;P_Conveyor_Device conveyor;&#10;float joint_angles[] = {90.0f, 30.0f, 90.0f, 0.0f, 90.0f};&#10;uint8_t data[100];&#10;&#10;/**&#10;  * @brief 主程序入口函数&#10;  * @return int&#10;  */&#10;int user_main()&#10;{&#10;    delay_init(72); //时钟频率&#10;    K230_urat_dma_Init();&#10;    HAL_TIM_Base_Start_IT(&amp;htim4); // 启动定时器并使能中断&#10;    arm0 = GetBotArmDevice(botarm_0);&#10;    conveyor = Conveyor_Device_Create();&#10;    arm0-&gt;Init(arm0);&#10;    conveyor-&gt;Init(conveyor);&#10;    arm0-&gt;move_joints(arm0, joint_angles);&#10;&#10;    while (1) {&#10;        conveyor-&gt;Forward(conveyor, CONVEYOR_DEFAULT_SPEED);&#10;    }&#10;}&#10;&#10;void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)&#10;{&#10;    if (htim == &amp;htim4) {&#10;        // 判断中断源是否为定时器htim2&#10;        TIM4_tick_ms++; // 每次中断时增加计数&#10;        // 每5毫秒调用一次&#10;        if (TIM4_tick_ms % 5 == 0) {&#10;        }&#10;        // 每500毫秒调用一次&#10;        if (TIM4_tick_ms % 500 == 0) {&#10;            HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);&#10;        }&#10;        if (TIM4_tick_ms % 1000 == 0) {&#10;            // arm0-&gt;claw_set(arm0,claw_open);&#10;        }&#10;        if (TIM4_tick_ms % 2000 == 0) {&#10;            // arm0-&gt;claw_set(arm0,claw_close);&#10;            TIM4_tick_ms = 0; // 重置计时器计数&#10;        }&#10;    }&#10;}&#10;void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)&#10;{&#10;    if (huart== &amp;huart2) {&#10;        HAL_UART_Transmit_DMA(&amp;huart2, data, Size);&#10;        HAL_UARTEx_ReceiveToIdle_DMA(&amp;huart2, data, sizeof(data));&#10;        __HAL_DMA_DISABLE_IT(&amp;hdma_usart2_rx, DMA_IT_HT);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="/**&#10;  * @file user_main.c&#10;  * @brief 用户主程序的入口文件&#10;  * @author sleet&#10;  * @date 2025/9/30&#10;  */&#10;&#10;#include &quot;user_main.h&quot;&#10;#include &quot;conveyor_device.h&quot;&#10;#include &quot;../K230_urat_dma/K230_urat_dma.h&quot;&#10;&#10;&#10;static uint32_t TIM4_tick_ms = 0; // 静态变量，跟踪时间滴答&#10;P_BotArm arm0;&#10;P_Conveyor_Device conveyor;&#10;float joint_angles[] = {90.0f, 30.0f, 90.0f, 0.0f, 90.0f};&#10;uint8_t data[100];&#10;&#10;/**&#10;  * @brief 主程序入口函数&#10;  * @return int&#10;  */&#10;int user_main()&#10;{&#10;    delay_init(72); //时钟频率&#10;    K230_urat_dma_Init();&#10;    HAL_TIM_Base_Start_IT(&amp;htim4); // 启动定时器并使能中断&#10;    arm0 = GetBotArmDevice(botarm_0);&#10;    conveyor = Conveyor_Device_Create();&#10;    arm0-&gt;Init(arm0);&#10;    conveyor-&gt;Init(conveyor);&#10;    arm0-&gt;move_joints(arm0, joint_angles);&#10;&#10;    while (1) {&#10;        conveyor-&gt;Forward(conveyor, CONVEYOR_DEFAULT_SPEED);&#10;    }&#10;}&#10;&#10;void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)&#10;{&#10;    if (htim == &amp;htim4) {&#10;        // 判断中断源是否为定时器htim2&#10;        TIM4_tick_ms++; // 每次中断时增加计数&#10;        // 每5毫秒调用一次&#10;        if (TIM4_tick_ms % 5 == 0) {&#10;        }&#10;        // 每500毫秒调用一次&#10;        if (TIM4_tick_ms % 500 == 0) {&#10;            HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);&#10;        }&#10;        if (TIM4_tick_ms % 1000 == 0) {&#10;            // arm0-&gt;claw_set(arm0,claw_open);&#10;        }&#10;        if (TIM4_tick_ms % 2000 == 0) {&#10;            // arm0-&gt;claw_set(arm0,claw_close);&#10;            TIM4_tick_ms = 0; // 重置计时器计数&#10;        }&#10;    }&#10;}&#10;void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)&#10;{&#10;    if (huart== &amp;huart2) {&#10;        HAL_UART_Transmit_DMA(&amp;huart2, data, Size);&#10;        HAL_UARTEx_ReceiveToIdle_DMA(&amp;huart2, data, sizeof(data));&#10;        __HAL_DMA_DISABLE_IT(&amp;hdma_usart2_rx, DMA_IT_HT);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>